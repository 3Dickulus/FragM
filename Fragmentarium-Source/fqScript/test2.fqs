// Fragmentarium qscript
// testing cmd script control with frag animation control
// 3Dickulus 07/04/15
// requires ./anim/ folder

// frame specs
function setFrameSpec(w,h,m,s) {
  // set the tile buffer size
  app.setTileWidth(w);
  app.setTileHeight(h);
  // set tile multiplier
  app.setTileMax(m);
  // how many frames to accumulate
  app.setSubFrames(s);
}

seconds = 10;
fps = 25;

// starting point
function init(){
  // uncomment to load a frag file, this will open a new tab in Fragmentarium (be careful)
  //  app.loadFragFile("./My_Params/new-Mandelbulb-anim.frag");

  // used to calculate range frames and/or total frames
  app.setFps(fps);

  // this should be => EasingCurve max frame / fps when animation = true
  app.setAnimationLength( seconds );

  // false = save images
  // true = open a preview window for EACH image (be careful)
  app.setPreview(false);

  // false = no control from frag
  // true = control from frag
  app.setAnimation(true);

  // begin
  app.setFrame(0);
  app.setStartFrame(0);
  app.setEndFrame(0);
}

// call our initialization function
init();

// set how many frames
maxFrames = seconds * fps;

// we are using animation from frag so set the basename only
// Fragmentarium will create our filename from this
app.setOutputBaseFileName("./anim/test.png");

for (i = 1; i <= maxFrames; i+=1) {

  // set the current frame
  app.setFrame(i);

  // size of tiled/frame to render
  setFrameSpec(64,36,10,10);

  // adjust parameter(s)
  app.setParameter("RotAngle", i*(360/maxFrames));

  // if the user wants to stop rendering break before next image
  if(!app.scriptRunning()) break;

  // render an image
  app.tileBasedRender();
}