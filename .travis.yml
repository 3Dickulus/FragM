
language: cpp

dist: xenial

os:
  - linux
  #- osx

#sudo: false

branches:
  only:
  - master

env:
  global:
    - secure: hJyZ1DjEzlboIQzjL3R1kmlBffrsJ6TBIxGEvkdCYqlynJr6cb3GfTCX3wvQ10HQphUir0kGnNqt6HFSlpYbKUtP87ganau1XVhBDLxWO3WGZ7spceuv2xYSblvlV12X1mzbIZCbK47u7NXzBNZum6ZsomAN9EQE+O1G8A1nXb8tXaRmn0Yposxp+tkhwC/FBaWlLk3g++h0JJnDCz6TnE29azZFqenTGzcm7VU95d0Wkl6HlUctV7krit4NlwSPKXlV7s1iZ/gkyNbOYLgv+X/0LCbR+dFraHVOnrejxBMGunmf+gSG9om6UzDIHi2TwBIt4y21VVYPRqlvMc6e/JZ1ciGzqxwQQ5XFWao2+4m4KwU+pg5GMq6APkFSZ7BcXpJPh+Ff6gmFsPexFm3JEBTH3rRUxC/pyydSgStkTUeFPG5J7rNVegGHiI3rhZpHIvoW9tXySgcquFn4fJzTiG/cKrXoSK8HWx7rAxZGRZQ31cbQjuPGZYV+fdqT7gtCmB1B+bVSYWn/Yt7lb0dMFJrJNolS3+dWzRzeMUEPfHEQQCuuuAzxlFZ3FpKfMHU8aB9cukypyRO7WOp0Zjxx05zfJrX+/lhJ69EANQd0b9X1+ubJfmI8Cvt8EHz3/7/Es8FeqPZiLMDPB+86H8in7TLE1F4HAf0Cr56UTSUNw1Y=
    - secure: IWsIp9Q4bQuAjOIfWtErXpMkMoNooUl/upHXRUHj3jb4vwZg1mf0VMYddvcXqAySQ1U/OiU1bqyGxuHVt/RelAyGjVLXFTQ3nlNhZ12cwmUKdeh1CdgeNnOc4Bx/N6DTlzsGXcaYpUulYNBfh7aI3HcRgKXx1uiMKbOoMOikF6MeSZi5JeDy2WEi31rInIirVx2vypJXj4VnHnblo2h/uH9HCY/t8trYvqrY/8lrXNIBsXuw0b/RMHPiDDmg3vnoSmvDCleQAWRVXsrIkgXcodQs3IqcwFA0ZshZ2pULvul88ENC8z7H/Ik2KUtMreu8xUE7BclWe6VmlUYb3qj27t+Gl9VXVN/tPB1uaAid0Dlp8QO6OVVgOwhtDatNNtqElB5Lk0+R/H63EOYjBJPYNSucspx3Jw9o3YZa8+SZlpjgE25C0xMfiy3BS4B/usu8wk1JIYLy14ZFGDA3RySwj4apibbsrQLQfmoo7qLLxmgzgx8pSSdLk1js7ubKvCiLgtsPXshaHogP8XZD4RPXOR5CLhDdpi1eqFc2e1zxNGr8ZwgGcRzhCtfl2pvFTLwDlqT26V9HjdLg2h0/cPacWJtgU+xMaBynAfegDPspO2Z5d6D8qTZS12itzgW+PlrsIUBnF2zRqH/LQw/XOyjLuu1e8WNSFN3CkzhVDby3dAM=
    - secure: iezXZec3P201MaqlXZKYKJ0Blo8Rk3mvC9qyb5TX9DJ+0oEvXsSwH+JpJOhtnDiWdGnlDT70smJK1fkauktH5qLxEHq5r+9Xe35kyyj9Tu3xA+z26pwHVA+ezIrHYebTUphlZSkKvqd8bJ2ecYO7VaoHrOkjg8YhrfPwOFmC/pJoatJKGAoM5IqPMhYvEkossvso6brkBrcYF6MJ7y/Qtg6tqhtE7yMalj76ooYdCu0sc8Apt6t3ittGP06Y/5dlNV/L+ZtTnsAR4/YJOxcRBqDWiD1pQG1qEixSpYlYL7VH1DMxOsXWCFgc6KXgeNKEjzKTW+X0g/ymW5x0Mzn2+aG1wNo1cFptQsFmXWR0yEDZZaX2uCLSgh1Y6uMhfHjM1XP/b/0UReh2cstI+DwP7l+EbP8vVUfIXeNtZiKbsUjXPX6GV4McLQ+wKUHOClo3/Zs95VGzmT0ijPldgtme0fkVy0NanZsLP8oCFknA3LCCcEVtrxOugVOKml1JVNoSQGBh2f7i0hrqYEZFWK7CxUabD45rt2KBLa/tvm0xvTvbS1xyDEzUW4lvGh+8D2sX0wMC0RGekF4c37vOQjV0biMemZddm9l0og0eSMm63e1RSUf+qpv4YwpAmcVwa3YRKbJlcpyi5ErytXDd7Xfv+b+OkSaL0iBscurlz/HLO+w=
  matrix:
    - CONFIG=release

compiler:
  - gcc

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      sudo add-apt-repository -y ppa:ubuntu-sdk-team/ppa
      sudo apt-get update -qq
      sudo add-apt-repository -y ppa:beineri/opt-qt592-xenial
      sudo apt-get update -qq
      
      #sudo add-apt-repository -y ppa:ubuntu-sdk-team/tools-development
      #sudo apt-get update -qq
      #sudo apt-get -qq install g++-4.8 libc6-i386
      #sudo apt-add-repository -y ppa:beineri/opt-qt595-trusty
      #sudo apt-get -qq update
      #sudo apt-get -qq install cmake
      #sudo apt-get -qq install qtcreator
      #apt-get -qq install extra-cmake-modules
      
      #sudo apt-add-repository -y ppa:irie/openexr
      #sudo apt-get -qq update
      #sudo apt-get -qq install libilmbase-dev
      #sudo apt-get -qq install libilmbase11
      #sudo apt-get -qq install libopenexr-dev
      #sudo apt-get -qq install libopenexr21
      #sudo apt-add-repository -y ppa:george-edison55/cmake-3.x 
    fi
  #- |
    #if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    #then
      #brew update
      #brew tab homebrew/versions
      #brew unlink gcc
      #brew install gcc48
      #brew link --overwrite gcc@4.8
      #export PATH=/usr/local/bin:$PATH
      #export CC=/usr/local/bin/gcc-4.8
      #export CXX=/usr/local/bin/g++-4.8
    #fi

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      sudo apt-get -qq install cmake
      sudo apt-get -qq install extra-cmake-modules
      sudo apt-get -qq install libopenexr-dev
      sudo apt-get -qq install libilmbase-dev
      #sudo apt-get -qq install qt5-default
      #sudo apt-get -qq install libqt5core5a
      #sudo apt-get -qq install libqt5gui5
      #sudo apt-get -qq install libqt5opengl5
      #sudo apt-get -qq install libqt5widgets5
      #sudo apt-get -qq install libqt5xml5
      #sudo apt-get -qq install libqt5script5
      sudo apt-get -qq install qttools5-dev
      sudo apt-get -qq install qtbase5-dev
      sudo apt-get -qq install qtbase5-dev-tools
      sudo apt-get -qq install qtscript5-dev
      sudo apt-get -qq install libqt5svg5-dev
      sudo apt-get -qq install libqt5opengl5-dev
      sudo apt-get -qq install libqt5xmlpatterns5-dev
    fi
  # OS X Qt http://braumeister.org/search/qt5
  # we need to use macdeployqtfix after using macdeployqt to fix the library paths!
  - |
    #if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    #then
      #brew install qt5
      #export QTDIR="/usr/local/opt/qt"
      #export LDFLAGS="-L/usr/local/opt/qt/lib"
      #export CPPFLAGS="-I/usr/local/opt/qt/include"

      #brew install ilmbase openexr

      #brew unlink openexr
      #brew link --overwrite openexr
      #brew unlink ilmbase
      #brew link --overwrite ilmbase

      #brew unlink cmake
      #brew install cmake
      ##brew install extra-cmake-modules
    #fi

before_script:
  #- |
    #if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    #then
      #source /opt/qt59/bin/qt59-env.sh
    #fi
  #- |
    #if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    #then
      #export PATH="$QTDIR/bin:$PATH"
    #fi

  - mkdir Fragmentarium-Source/build
  - cd Fragmentarium-Source/build

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
       cmake -DUSE_OPEN_EXR=ON -DBUILD_LINUX_DEB=ON ..
       make
       make package
    fi
  - |
    #if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    #then
       #cmake -DUSE_OPEN_EXR=ON -DCMAKE_INSTALL_PREFIX=../../ ..
       #make install
    #fi

before_deploy:
  #- |
    #export VERSION_NUMBER=`grep "version =" ../Fragmentarium/GUI/MainWindow.cpp | sed "s/[^0-9,]//g" | sed "s/,/\./g" | sed "s/.$//g" | sed "s/.......$//g"`
    #export BUILD_NUMBER=`grep "version =" ../Fragmentarium/GUI/MainWindow.cpp | sed "s/[^0-9,]//g" | sed "s/,/\./g" | sed "s/.$//g" | sed "s/$*[0-9]\.//g"`
  ## create debian package for linux and a disk image for OSX
  #- |
    #if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    #then
      #mv Fragmentarium-2.5.0-0.1.1-Linux.deb Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-Linux.deb
      ##wget http://www.digilanti.org/fragmentarium/Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-SuSE_Leap-43.2.rpm
      ##wget http://www.digilanti.org/fragmentarium/Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-winex.7z
    #fi
  ##- |
    ##if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    ##then

      ##cd ../../Fragmentarium-2.0.0
      ##mv ./Examples ./Fragmentarium-2.0.0.app/Contents/MacOS/Examples
      ##mv ./fqScript ./Fragmentarium-2.0.0.app/Contents/MacOS/fqScript
      ##mv ./Misc ./Fragmentarium-2.0.0.app/Contents/MacOS/Misc
      ##mv ./Languages ./Fragmentarium-2.0.0.app/Contents/MacOS/Languages

      ##macdeployqt ./Fragmentarium-2.0.0.app

      ##cd ../
      
      ##ditto -c -k ./Fragmentarium-2.0.0 ./Fragmentarium-2.0.0.zip
      ##mv ./Fragmentarium-2.0.0.zip ./Fragmentarium-Source/build/Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-x86_64-apple-darwin16.7.0.zip
      ##cd ./Fragmentarium-Source/build
      ##wget http://www.digilanti.org/fragmentarium/Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER.7z
    ##fi
  
  ##add a tag
  #- TIME_STRING=`date +%H%M%S`
  #- export GIT_TAG="Fragmentarium-"$VERSION_NUMBER-$BUILD_NUMBER
  #- git tag $GIT_TAG -a -m "Generated tag from TravisCI build "$TRAVIS_BUILD_NUMBER
  #- git push -q https://$TAGPERM@github.com/$USERNAME/FragM --tags >/dev/null 2>&1

deploy:
  ### Linux master release
  #- provider: releases
    #api_key:
        #secure: W0e1da1X8Oo4i4F5egQ0C3wv7DB72j9+64/E9kd+/CfxWXgdjf0DND7D0JMw8g14xJ4pYeSk27HEjkJs0GNFPv4UHUv6pLNlZsIHuMecESVSRQcVLLRb/XLmP1j2EgXSgFaJZQ56S18t8ulBy0ftkSHPV1H9zP3y8L0nENAUfB0ZTmE+t6LME+PncfWoIhBL0gda0Wx1bHqR1Rsbak8E0t5mp+K8LWkG9Ke42++cRBibgSVBsEePhv1mIUxOioYKF+nONWu/gGnHW5qg1d0zFFeil2qrvSuMOaHnnfiqfZn2L0xHFu5v/SiuKweC/10Yd6AwyVmwdaIvxCoM6/CqzlonQ862I6+rvZcwW01pbPlNpJZOeqAER8FRAyG8P561mdDArwHv+KdUeZTUJHHfB+SQewdeHn+7bTi6aPJEZSE39cZmrZN+vuWPZhKPNuYyntbLz561yATEBibpkj4i+wmTLZvRgHJ4zCHEr2PgxSvA4KTheV3RhKUW4U3vyJ7Oilw5j6RDaYZAgYeHwHxxGkbI999wnsEdkBdBHKdfF5tgXjH+YLnzriRIwvFQkDmZRMTFOvGtCYoJfPLpismCS6O7DE9OWRVCyBTSPvnfAdRkkRvVDzfhgiY/FkoeJ3wYvuINT77VApmBtAuXxj6gxEnTjgrgpHazh3o3+bvbPUg=
    #file:
        #- Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-Linux.deb
        ##- Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-SuSE_Leap-43.2.rpm
        ##- Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-winex.7z
    #skip_cleanup: true
    #on:
        #repo: 3Dickulus/FragM
        #branch: master
        #tags: false
        #condition: $CONFIG = release && ${TRAVIS_OS_NAME} = linux

  #### macOS master release
  ##- provider: releases
    ##api_key:
      ##secure: W0e1da1X8Oo4i4F5egQ0C3wv7DB72j9+64/E9kd+/CfxWXgdjf0DND7D0JMw8g14xJ4pYeSk27HEjkJs0GNFPv4UHUv6pLNlZsIHuMecESVSRQcVLLRb/XLmP1j2EgXSgFaJZQ56S18t8ulBy0ftkSHPV1H9zP3y8L0nENAUfB0ZTmE+t6LME+PncfWoIhBL0gda0Wx1bHqR1Rsbak8E0t5mp+K8LWkG9Ke42++cRBibgSVBsEePhv1mIUxOioYKF+nONWu/gGnHW5qg1d0zFFeil2qrvSuMOaHnnfiqfZn2L0xHFu5v/SiuKweC/10Yd6AwyVmwdaIvxCoM6/CqzlonQ862I6+rvZcwW01pbPlNpJZOeqAER8FRAyG8P561mdDArwHv+KdUeZTUJHHfB+SQewdeHn+7bTi6aPJEZSE39cZmrZN+vuWPZhKPNuYyntbLz561yATEBibpkj4i+wmTLZvRgHJ4zCHEr2PgxSvA4KTheV3RhKUW4U3vyJ7Oilw5j6RDaYZAgYeHwHxxGkbI999wnsEdkBdBHKdfF5tgXjH+YLnzriRIwvFQkDmZRMTFOvGtCYoJfPLpismCS6O7DE9OWRVCyBTSPvnfAdRkkRvVDzfhgiY/FkoeJ3wYvuINT77VApmBtAuXxj6gxEnTjgrgpHazh3o3+bvbPUg=
    ##file: 
      ##- Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER-x86_64-apple-darwin16.7.0.zip
      ##- Fragmentarium-$VERSION_NUMBER-$BUILD_NUMBER.7z
    ##skip_cleanup: true
    ##on:
        ##repo: 3Dickulus/FragM
        ##branch: master
        ##tags: false
        ##condition: $CONFIG = release && ${TRAVIS_OS_NAME} = osx

